{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/api/Folder.js","components/Folder-Components/CreateFolder.js","App.js","index.js","components/styles/BodyContainer.module.css"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","authenticatedDropdown","DropdownButton","title","Dropdown","Item","href","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createFolder","director","movie","CreateFolder","folder","setFolder","createdId","setCreatedId","handleSubmit","_id","folder_name","App","msgAlerts","setMsgAlerts","uuid","styles","container","body","backgroundImage","map","content","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById","module","exports"],"mappings":"2NAkDeA,MA3Cf,YAA2D,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE7C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAlBAC,QAAQC,IAAIH,GAIZI,qBAAU,WAER,IAAMC,EAAKC,YAAW,kBAAMP,GAAQ,KAAQ,KAO5C,OALAE,EAAaI,GAKN,WACLE,aAAaP,MAEd,IAGD,cAACQ,EAAA,EAAD,CAEEd,QAASA,EAETe,QAAS,kBAAMV,GAAQ,IAEvBW,aAAW,EAEXZ,KAAMA,EARR,SAUE,sBAAKa,UAAU,YAAf,UACE,cAACH,EAAA,EAAMI,QAAP,UAAgBjB,IAChB,mBAAGgB,UAAU,aAAb,SAA2Bf,U,wDCnC7BiB,EACJ,qCACE,cAAC,UAAD,CAASC,GAAG,aAAaH,UAAU,WAAnC,6BACA,cAAC,UAAD,CAASG,GAAG,YAAYH,UAAU,WAAlC,yBAIEI,EACJ,qCACE,cAAC,UAAD,CAASD,GAAG,WAAWH,UAAU,WAAjC,qBACA,cAAC,UAAD,CAASG,GAAG,WAAWH,UAAU,WAAjC,wBAIEK,EACJ,mCACE,cAAC,UAAD,CAASF,GAAG,IAAIH,UAAU,WAA1B,oBAIEM,EACJ,mCACE,eAACC,EAAA,EAAD,CAAgBb,GAAG,wBAAwBc,MAAM,kBAAjD,UACE,cAAC,gBAAD,CAAeL,GAAG,iBAAlB,SACE,cAACM,EAAA,EAASC,KAAV,2BAEF,cAACD,EAAA,EAASC,KAAV,CAAeC,KAAK,aAApB,4BACA,cAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,aAApB,iCA8BSC,EAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,cAACC,EAAA,EAAD,CAAQC,GAAG,YAAYhC,QAAQ,OAAOiC,OAAO,KAA7C,SACE,eAACC,EAAA,EAAD,WACGJ,EAAOP,EAAwB,wBAChC,cAACQ,EAAA,EAAOI,MAAR,UACE,cAAC,OAAD,CACEf,GAAG,IACHgB,MAAO,CAAEC,MAAO,OAAQC,eAAgB,QAF1C,0BAMF,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiB9B,GAAG,mBAApB,SACE,eAAC+B,EAAA,EAAD,CAAKzB,UAAU,UAAf,UACGa,GACC,uBAAMb,UAAU,mBAAhB,sBAA6Ca,EAAKa,SAEnDrB,EACAQ,EAAOX,EAAuBE,a,yBC1DnCuB,EACQ,+CADRA,EAES,wBASAC,EANkB,cAA7BC,OAAOC,SAASC,SACTJ,EAEAA,E,iBCNEK,EAAS,SAACN,EAAOO,EAAUC,GACtC,OAAOC,IAAMC,KAAKR,EAAS,YAAa,CACtCS,YAAa,CACXX,QACAO,WACAK,sBAAuBJ,MAKhBK,EAAS,SAACb,EAAOO,GAC5B,OAAOE,IAAMC,KAAKR,EAAS,YAAa,CACtCS,YAAa,CACXX,QACAO,eAKOO,EAAU,SAAA3B,GACrB,OAAOsB,IAAMM,OAAOb,EAAS,aAAc,CACzCc,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,WAKtBC,EAAiB,SAACC,EAAaC,EAAalC,GACvD,OAAOsB,IAAMa,MACXpB,EAAS,cACT,CACEqB,UAAW,CACTC,IAAKJ,EACLK,IAAKJ,IAGT,CACEL,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,W,gBCgDtBQ,EAhFA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,EAA0BpE,mBAAS,IAAnC,mBAAOwC,EAAP,KAAc6B,EAAd,KACA,EAAgCrE,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBuB,EAAjB,KACA,EAAwDtE,mBAAS,IAAjE,mBAAOgD,EAAP,KAA6BuB,EAA7B,KACA,EAA4CvE,oBAAS,GAArD,mBAAOwE,EAAP,KAAuBC,EAAvB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfD,EAAME,iBADS,kBAIP/B,EAAON,EAAOO,EAAUC,GAJjB,uBAKKK,EAAOb,EAAOO,GALnB,OAKP+B,EALO,OAMbV,EAAQU,EAAIC,KAAKpD,MACjBwC,EAAS,CACPrE,QAAS,kBACTC,QCxBqB,yDDyBrBF,QAAS,YAEX4E,GAAkB,GAZL,kDAcbJ,EAAS,IACTC,EAAY,IACZC,EAAwB,IACxBJ,EAAS,CACPrE,QAAS,8BAAgC,KAAMC,QAC/CA,QCjCqB,qEDkCrBF,QAAS,WApBE,0DAAH,sDAyBd,OAAI2E,EACK,cAAC,IAAD,CAAUvD,GAAG,MAIpB,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAACkE,EAAA,EAAD,CAAMC,SAAUP,EAAhB,UACE,eAACM,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAOjD,EACPkD,YAAY,cACZC,SAAU,SAAAhB,GAAK,OAAIN,EAASM,EAAMiB,OAAOH,aAG7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,WACLC,MAAO1C,EACPwC,KAAK,WACLG,YAAY,WACZC,SAAU,SAAAhB,GAAK,OAAIL,EAAYK,EAAMiB,OAAOH,aAGhD,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,uBACLC,MAAOzC,EACPuC,KAAK,WACLG,YAAY,mBACZC,SAAU,SAAAhB,GAAK,OAAIJ,EAAwBI,EAAMiB,OAAOH,aAG5D,cAACI,EAAA,EAAD,CAAQ/E,UAAU,OAAOjB,QAAQ,UAAU0F,KAAK,SAAhD,6BELKO,EApEA,SAAC,GAA2B,IAAzB3B,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,EAA0BpE,mBAAS,IAAnC,mBAAOwC,EAAP,KAAc6B,EAAd,KACA,EAAgCrE,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBuB,EAAjB,KACA,EAA4CtE,oBAAS,GAArD,mBAAOwE,EAAP,KAAuBC,EAAvB,KAEMsB,EAAQ,uCAAG,WAAOpB,GAAP,eAAAC,EAAA,6DACfD,EAAME,iBADS,kBAIKxB,EAAOb,EAAOO,GAJnB,OAIP+B,EAJO,OAKbV,EAAQU,EAAIC,KAAKpD,MAEjBwC,EAAS,CACPrE,QAAS,kBACTC,QDrBqB,WCsBrBF,QAAS,YAEX4E,GAAkB,GAZL,kDAcbJ,EAAS,IACTC,EAAY,IACZH,EAAS,CACPrE,QAAS,8BAAgC,KAAMC,QAC/CA,QD7BqB,kEC8BrBF,QAAS,WAnBE,0DAAH,sDAwBd,OAAI2E,EACK,cAAC,IAAD,CAAUvD,GAAG,MAIpB,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAACkE,EAAA,EAAD,CAAMC,SAAUc,EAAhB,UACE,eAACf,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAOjD,EACPkD,YAAY,cACZC,SAAU,SAAAhB,GAAK,OAAIN,EAASM,EAAMiB,OAAOH,aAG7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,WACLC,MAAO1C,EACPwC,KAAK,WACLG,YAAY,WACZC,SAAU,SAAAhB,GAAK,OAAIL,EAAYK,EAAMiB,OAAOH,aAIhD,cAACI,EAAA,EAAD,CAAQ/E,UAAU,OAAOjB,QAAQ,UAAU0F,KAAK,SAAhD,6BChCKS,EAhCC,SAAC,GAAmC,IAAjC7B,EAAgC,EAAhCA,SAAU8B,EAAsB,EAAtBA,UAAWtE,EAAW,EAAXA,KACtC,EAA4C3B,oBAAS,GAArD,mBAAOwE,EAAP,KAAuBC,EAAvB,KAwBA,OApBAlE,qBAAU,YAGY,uCAAG,sBAAAqE,EAAA,sEAEftB,EAAQ3B,GAFO,OAIrBwC,EAAS,CACPrE,QAAS,0BACTC,QFhBsB,kBEiBtBF,QAAS,YAIXoG,IACAxB,GAAkB,GAZG,2CAAH,qDAcpByB,KACC,KAEEvE,GAAQ6C,EACJ,cAAC,IAAD,CAAUvD,GAAG,MAGf,ICwCMkF,EAlEQ,SAAC,GAAwB,IAAtBhC,EAAqB,EAArBA,SAAUxC,EAAW,EAAXA,KAClC,EAAsC3B,mBAAS,IAA/C,mBAAO4D,EAAP,KAAoBwC,EAApB,KACA,EAAsCpG,mBAAS,IAA/C,mBAAO6D,EAAP,KAAoBwC,EAApB,KACA,EAA4CrG,oBAAS,GAArD,mBAAOwE,EAAP,KAAuBC,EAAvB,KAEM6B,EAAgB,uCAAG,WAAO3B,GAAP,SAAAC,EAAA,6DACvBD,EAAME,iBADiB,kBAIflB,EAAeC,EAAaC,EAAalC,GAJ1B,OAKrBwC,EAAS,CACPrE,QAAS,0BACTC,QHhB6B,iCGiB7BF,QAAS,YAEX4E,GAAkB,GAVG,gDAYrB2B,EAAe,IACfC,EAAe,IACflC,EAAS,CACPrE,QAAS,sCAAwC,KAAMC,QACvDA,QHxB6B,qEGyB7BF,QAAS,WAjBU,yDAAH,sDAsBtB,OAAK8B,GAAQ6C,EACJ,cAAC,IAAD,CAAUvD,GAAG,MAIpB,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,iDACA,eAACkE,EAAA,EAAD,CAAMC,SAAUqB,EAAhB,UACE,eAACtB,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,cACLC,MAAO7B,EACP2B,KAAK,WACLG,YAAY,eACZC,SAAU,SAAAhB,GAAK,OAAIyB,EAAezB,EAAMiB,OAAOH,aAGnD,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,cACLC,MAAO5B,EACP0B,KAAK,WACLG,YAAY,eACZC,SAAU,SAAAhB,GAAK,OAAI0B,EAAe1B,EAAMiB,OAAOH,aAInD,cAACI,EAAA,EAAD,CAAQ/E,UAAU,OAAOjB,QAAQ,UAAU0F,KAAK,SAAhD,6B,iBC7BGgB,EAAe,SAACjF,EAAOkF,EAAU7E,GAC5C,OAAOsB,IAAMC,KAAN,UACFT,EADE,aAEL,CAAEgE,MAAO,CAAEnF,QAAOkF,aAClB,CACEhD,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,WCMtBgD,EAhDM,SAAC,GAAwB,IAAtB/E,EAAqB,EAArBA,KAAMwC,EAAe,EAAfA,SAC5B,EAA4BnE,mBAAS,IAArC,mBAAO2G,EAAP,KAAeC,EAAf,KACA,EAAkC5G,mBAAS,MAA3C,mBAAO6G,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,uCAAG,WAAMpC,GAAN,eAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAIC0B,EAAaI,EAAQhF,GAJtB,OAIXmD,EAJW,OAKjBgC,EAAahC,EAAIC,KAAK4B,OAAOK,KAC7B7C,EAAS,CACPrE,QAAS,iBACTC,QAAQ,WAAD,OAAa4G,EAAb,kBACP9G,QAAS,YATM,gDAYjBsE,EAAS,CACPrE,QAAS,0BACTC,QAAS,KAAMA,QACfF,QAAS,WAfM,yDAAH,sDAoBlB,OAAK8B,EAEMkF,EACF,cAAC,IAAD,CAAU5F,GAAE,mBAAc4F,KAIjC,8BACE,uBAAM5B,SAAU8B,EAAhB,UACE,mDACA,iDAEE,uBACExB,KAAK,OACLC,KAAK,cACLC,MAAOkB,EAAOM,YACdtB,SAAU,SAAAhB,GAAK,OAAIiC,EAAUjC,EAAMiB,OAAOH,kBAf3C,cAAC,IAAD,CAAUxE,GAAG,OC6CTiG,EA3DH,WACV,MAAwBlH,mBAAS,MAAjC,mBAAO2B,EAAP,KAAayC,EAAb,KACA,EAAkCpE,mBAAS,IAA3C,mBAAOmH,EAAP,KAAkBC,EAAlB,KAIMjD,EAAW,SAAC,GAAmC,IAAjCrE,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASF,EAAc,EAAdA,QAC9BW,EAAK6G,cACXD,GAAa,SAAAD,GAAS,4BAASA,GAAT,CAAoB,CAAErH,UAASC,UAASF,UAASW,YAGzE,OACE,sBAAKM,UAAWwG,IAAOC,UAAvB,UACE,cAAC,EAAD,CAAQ5F,KAAMA,IACd,sBAAKb,UAAWwG,IAAOE,KAAMvF,MAAO,CAAEwF,gBAAiB,uDAAvD,UACGN,EAAUO,KAAI,SAACvD,GAAD,OACb,cAAC,EAAD,CAEErE,QAASqE,EAASrE,QAClBD,QAASsE,EAAStE,QAClBE,QAASoE,EAASpE,QAClBS,GAAI2D,EAAS3D,IAJR2D,EAAS3D,OAOlB,sBAAMM,UAAWwG,IAAOK,QAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,WACLC,QAAS,cAAC,EAAD,CAAQ1D,SAAUA,EAAUC,QAASA,MAEhD,cAAC,IAAD,CACEwD,KAAK,WACLC,QAAS,cAAC,EAAD,CAAQ1D,SAAUA,EAAUC,QAASA,MAEhD,cAAC,IAAD,CACEwD,KAAK,YACLC,QACE,cAAC,EAAD,CACE1D,SAAUA,EACV8B,UAnCE,kBAAM7B,EAAQ,OAoChBzC,KAAMA,MAIZ,cAAC,IAAD,CACEiG,KAAK,aACLC,QAAS,cAAC,EAAD,CAAgB1D,SAAUA,EAAUxC,KAAMA,MAErD,cAAC,IAAD,CACEiG,KAAK,kBACLC,QAAS,cAAC,EAAD,CAAc1D,SAAUA,EAAUxC,KAAMA,kBCzDzDmG,EACJ,cAAC,gBAAD,CAAeC,SAAUC,mBAAzB,SACE,cAAC,EAAD,MAIJC,IAASC,OAAOJ,EAAQK,SAASC,eAAe,U,mBCZhDC,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,4BAA4B,QAAU,iC","file":"static/js/main.6caf873b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='change-pw/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='sign-up/' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='sign-in/' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst authenticatedDropdown = (\n  <>\n    <DropdownButton id='dropdown-basic-button' title='Dropdown button'>\n      <LinkContainer to='create-folder/'>\n        <Dropdown.Item>New Folder</Dropdown.Item>\n      </LinkContainer>\n      <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\n      <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\n    </DropdownButton>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='secondary' variant='dark' expand='md'>\n    <Container>\n      {user ? authenticatedDropdown : <div></div>}\n      <Navbar.Brand>\n        <Link\n          to='/'\n          style={{ color: '#FFF', textDecoration: 'none' }}>\n                Chalkboard\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://project4chalkboard-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-pw/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrls from '../../apiConfig'\nimport axios from 'axios'\n\n// export const indexFolders = (user) => {\n//   return axios.get(apiUrls + '/movies/', {\n//     headers: {\n//       Authorization: `Token ${user.token}`\n//     }\n//   })\n// }\n\n// export const showFolder = (id, user) => {\n//   return axios.get(`${apiUrls}/movies/${id}/`, {\n//     headers: {\n//       Authorization: `Token ${user.token}`\n//     }\n//   })\n// }\n\n// export const deleteFolder = (id, user) => {\n//   return axios.delete(`${apiUrls}/movies/${id}`, {\n//     headers: {\n//       Authorization: `Token ${user.token}`\n//     }\n//   })\n// }\n\n// export const updateFolder = (id, title, director, user) => {\n//   return axios.patch(\n//     `${apiUrls}/movies/${id}`,\n//     { movie: { title, director } },\n//     {\n//       headers: {\n//         Authorization: `Token ${user.token}`\n//       }\n//     }\n//   )\n// }\n\nexport const createFolder = (title, director, user) => {\n  return axios.post(\n    `${apiUrls}/folders/`,\n    { movie: { title, director } },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { createFolder } from '../api/Folder'\nconst CreateFolder = ({ user, msgAlert }) => {\n  const [folder, setFolder] = useState('')\n  const [createdId, setCreatedId] = useState(null)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      const res = await createFolder(folder, user)\n      setCreatedId(res.data.folder._id)\n      msgAlert({\n        heading: 'Folder Created',\n        message: `Created ${folder} successfully.`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed To Create Folder',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  } else if (createdId) {\n    return <Navigate to={`/folders/${createdId}`} />\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button>Create Folder</button>\n        <label>\n          Folder Name:\n          <input\n            type='text'\n            name='folder_name'\n            value={folder.folder_name}\n            onChange={event => setFolder(event.target.value)}\n          />\n        </label>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateFolder\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport styles from './components/styles/BodyContainer.module.css'\nimport CreateFolder from './components/Folder-Components/CreateFolder'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <div className={styles.container}>\n      <Header user={user} />\n      <div className={styles.body} style={{ backgroundImage: 'url(\\'https://wallpaperaccess.com/full/1390896.jpg\\')' }}>\n        {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n          />\n        ))}\n        <main className={styles.content}>\n          <Routes>\n            <Route\n              path='sign-up/'\n              element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n            />\n            <Route\n              path='sign-in/'\n              element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n            />\n            <Route\n              path='sign-out/'\n              element={\n                <SignOut\n                  msgAlert={msgAlert}\n                  clearUser={clearUser}\n                  user={user}\n                />\n              }\n            />\n            <Route\n              path='change-pw/'\n              element={<ChangePassword msgAlert={msgAlert} user={user} />}\n            />\n            <Route\n              path='/create-folder/'\n              element={<CreateFolder msgAlert={msgAlert} user={user} />}\n            />\n          </Routes>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BodyContainer_container__1MB7h\",\"body\":\"BodyContainer_body__1QfSJ\",\"content\":\"BodyContainer_content__2TRyn\"};"],"sourceRoot":""}